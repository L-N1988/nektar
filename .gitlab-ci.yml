stages:
  - build-env
  - build-and-test
  - publish

build-env:
  stage: build-env
  variables:
    dockerfile: docker/nektar-env/Dockerfile
    image_name: nektar-env
  tags:
    - shell
  only:
    refs:
      - feature/gitlab_ci
      - tags
  script:
    - docker build --cpu-period 100000 --cpu-quota 200000 -t ${image_name} -f ${dockerfile} .

build-and-test:
  stage: build-and-test
  image: nektar-env
  tags:
    - docker
  only:
    refs:
      - feature/gitlab_ci
      - tags
  script:
    - mkdir ~/.ccache && echo "cache_dir = /cache/nektar" >> ~/.ccache/ccache.conf
    - mkdir build
    - cmake -B build
      -DCMAKE_BUILD_TYPE:STRING=Debug
      -DNEKTAR_FULL_DEBUG:BOOL=ON
      -DNEKTAR_TEST_ALL:BOOL=ON
      -DNEKTAR_BUILD_TIMINGS:BOOL=ON
      -DNEKTAR_USE_ARPACK:BOOL=ON
      -DNEKTAR_USE_FFTW:BOOL=ON
      -DNEKTAR_USE_MPI:BOOL=ON
      -DNEKTAR_USE_SCOTCH:BOOL=ON
      -DNEKTAR_USE_PETSC:BOOL=ON
      -DNEKTAR_USE_HDF5:BOOL=ON
      -DNEKTAR_USE_MESHGEN:BOOL=ON
      -DNEKTAR_USE_CCM:BOOL=ON
      -DNEKTAR_BUILD_PYTHON:BOOL=ON
      -DNEKTAR_TEST_USE_HOSTFILE=ON
      -DNEKTAR_ERROR_ON_WARNINGS=OFF
      .
      - make -C build -j 2 all
      - make -C build -j 2 install
      - (cd build && ctest -j 2)

publish:
  image: debian:buster-slim
  stage: publish
  tags:
    - docker
  variables:
    GIT_STRATEGY: none 
  only:
    refs:
      - feature/gitlab_ci
      - tags
  dependencies:
    - docker-build
  script:
    - mv build.tar.gz ${CI_COMMIT_SHORT_SHA}-build.tar.gz
    # - # scp to a web server somewhere
