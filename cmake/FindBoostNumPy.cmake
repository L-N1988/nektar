SET(_BOOST_NUMPY_SEARCH
    $ENV{BOOST_ROOT}
    $ENV{BOOST_DIR}
    $ENV{BOOST_NUMPY_DIR}
    /usr/include
    /usr/local/include)

FIND_PATH(BOOST_NUMPY_INCLUDE_DIR boost/numpy.hpp
    PATHS ${_BOOST_NUMPY_SEARCH} PATH_SUFFIXES "include")
FIND_LIBRARY(BOOST_NUMPY_LIBRARY_RELEASE NAMES boost_numpy
    HINTS ${_BOOST_NUMPY_SEARCH} PATH_SUFFIXES "lib")
FIND_LIBRARY(BOOST_NUMPY_LIBRARY_DEBUG NAMES
    boost_numpy-gd HINTS ${_BOOST_NUMPY_SEARCH} PATH_SUFFIXES "lib")
 
IF (${BOOST_NUMPY_LIBRARY_DEBUG} STREQUAL "BOOST_NUMPY_LIBRARY_DEBUG-NOTFOUND")
  # Only release version found
  MESSAGE(STATUS "Warning: Boost::NumPy debug library not found")
  SET(BOOST_NUMPY_LIBRARY ${BOOST_NUMPY_LIBRARY_RELEASE})
ELSE()
  # Release and debug
  SET(BOOST_NUMPY_LIBRARY
      optimized ${BOOST_NUMPY_LIBRARY_RELEASE}
      debug ${BOOST_NUMPY_LIBRARY_DEBUG})
ENDIF()
 
INCLUDE(FindPackageHandleStandardArgs)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(BoostNumPy  DEFAULT_MSG
    BOOST_NUMPY_LIBRARY BOOST_NUMPY_INCLUDE_DIR)
 
MARK_AS_ADVANCED(BOOST_NUMPY_LIBRARY BOOST_NUMPY_INCLUDE_DIR)
