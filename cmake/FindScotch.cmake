# FindScotch
# ----------
# Finds the graph partitioning library Scotch.
#
# This module defines the following variables
#   SCOTCH_INCLUDE_DIRS - Location of scotch.h
#   SCOTCH_LIBRARY - Location of main scotch library
#   SCOTCHERR_LIBRARY - Location of scotcherr library
#   SCOTCH_FOUND - TRUE if Scotch found
#   SCOTCH_VERSION - Version of scotch library found

SET(TEST_SCOTCH_DIR $ENV{SCOTCH_DIR})
SET(TEST_SCOTCH_INCLUDE_DIR $ENV{SCOTCH_INCDIR})

SET(SCOTCH_HEADER_DIRS "SCOTCH_HEADERS_DIR-NOTFOUND")
IF(TEST_SCOTCH_INCLUDE_DIR)
    FIND_PATH(SCOTCH_HEADER_DIRS NAMES scotch.h 
                HINTS ${TEST_SCOTCH_INCLUDE_DIR})
ELSE()
    IF(TEST_SCOTCH_DIR)
        FIND_PATH(SCOTCH_HEADERS_DIRS NAMES scotch.h
                    HINTS ${TEST_SCOTCH_DIR}
                    PATH_SUFFIXES "include" "include/scotch")
    ELSE()
        FIND_PATH(SCOTCH_HEADERS_DIRS NAMES scotch.h
                    PATH_SUFFIXES "scotch")
    ENDIF()
ENDIF()
MARK_AS_ADVANCED(SCOTCH_HEADERS_DIRS)

IF (SCOTCH_HEADERS_DIRS)
    SET(SCOTCH_INCLUDE_DIR ${SCOTCH_HEADERS_DIRS})
ELSE ()
    SET(SCOTCH_INCLUDE_DIR "SCOTCH_INCLUDE_DIRS-NOTFOUND")
    IF (NOT SCOTCH_FIND_QUIETLY)
        MESSAGE(STATUS "Looking for Scotch -- scotch.h not found")
    ENDIF ()
ENDIF ()
LIST(REMOVE_DUPLICATES SCOTCH_INCLUDE_DIR)

TRY_RUN(
    RUN_RESULT COMPILE_RESULT
    ${CMAKE_CURRENT_BINARY_DIR}/
    ${CMAKE_CURRENT_SOURCE_DIR}/cmake/scripts/get-scotch-version.c
    CMAKE_FLAGS -DINCLUDE_DIRECTORIES=${SCOTCH_INCLUDE_DIR}
    COMPILE_OUTPUT_VARIABLE COMPILER_OUTPUT
    RUN_OUTPUT_VARIABLE SCOTCH_VERSION)

IF("${COMPILE_RESULT}" AND ("${RUN_RESULT}" EQUAL 0))
    STRING(STRIP "${SCOTCH_VERSION}" SCOTCH_VERSION)
ELSE()
    MESSAGE(ERROR "ERROR checking for Scotch version.")
ENDIF()

FIND_LIBRARY(SCOTCH_LIBRARY    NAMES scotch PATHS ${MACPORTS_PREFIX}/lib)
FIND_LIBRARY(SCOTCHERR_LIBRARY NAMES scotcherr PATHS ${MACPORTS_PREFIX}/lib)
GET_FILENAME_COMPONENT(SCOTCH_LIBRARY_DIR ${SCOTCH_LIBRARY} PATH)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Scotch
    FOUND_VAR SCOTCH_FOUND
    REQUIRED_VARS SCOTCH_LIBRARY SCOTCHERR_LIBRARY
        SCOTCH_LIBRARY_DIR SCOTCH_INCLUDE_DIR
    VERSION_VAR SCOTCH_VERSION)


